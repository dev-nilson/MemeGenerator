{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denilson\\\\Desktop\\\\React\\\\memes\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    image: \"https://i.imgflip.com/26am.jpg\"\n  });\n  const [allMemes, setAllMemes] = useState([]);\n  useEffect(() => {\n    async function getMemes() {\n      const res = await fetch('https://api.imgflip.com/get_memes');\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n\n    getMe;\n  }, []);\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const memeImage = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      image: memeImage\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Top\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Bottom\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"form-button\",\n        children: \"Get meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"meme-image\",\n        src: meme.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Form, \"dVYbott+/WMNybpjUAtIKdx7EJc=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","Form","meme","setMeme","topText","bottomText","image","allMemes","setAllMemes","getMemes","res","fetch","data","json","memes","getMe","getMemeImage","randomNumber","Math","floor","random","length","memeImage","url","prevMeme","handleChange","event","name","value","target"],"sources":["C:/Users/denilson/Desktop/React/memes/src/components/Form.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nexport default function Form() {\r\n   const [meme, setMeme] = useState({\r\n      topText: \"\",\r\n      bottomText: \"\",\r\n      image: \"https://i.imgflip.com/26am.jpg\"\r\n   });\r\n   const [allMemes, setAllMemes] = useState([]);\r\n\r\n   useEffect(() => {\r\n      async function getMemes() {\r\n         const res = await fetch('https://api.imgflip.com/get_memes');\r\n         const data = await res.json();\r\n         \r\n         setAllMemes(data.data.memes);\r\n      }\r\n\r\n      getMe\r\n\r\n   }, [])\r\n\r\n   function getMemeImage() {\r\n      const randomNumber = Math.floor(Math.random() * allMemes.length);\r\n      const memeImage = allMemes[randomNumber].url;\r\n      \r\n      setMeme(prevMeme => ({\r\n         ...prevMeme,\r\n         image: memeImage\r\n      }));\r\n   }\r\n\r\n   function handleChange(event) {\r\n      const {name, value} = event.target;\r\n\r\n      setMeme(prevMeme => ({\r\n         ...prevMeme,\r\n         [name]: value\r\n      }));\r\n   }\r\n   \r\n   return (\r\n      <main>\r\n         <div className='form'>\r\n            <input className='form-input' type='text' placeholder='Top' name='topText' value={meme.topText} onChange={handleChange}/>\r\n            <input className='form-input' type='text' placeholder='Bottom' name='bottomText' value={meme.bottomText} onChange={handleChange}/>\r\n            <button onClick={getMemeImage} className='form-button'>Get meme</button>\r\n         </div>\r\n         <div className=\"meme\">\r\n            <img className='meme-image' src={meme.image}/>\r\n            <h2 className=\"meme-text top\">{meme.topText}</h2>\r\n            <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\r\n         </div>\r\n      </main>\r\n   )\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC;IAC9BI,OAAO,EAAE,EADqB;IAE9BC,UAAU,EAAE,EAFkB;IAG9BC,KAAK,EAAE;EAHuB,CAAD,CAAhC;EAKA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACb,eAAeU,QAAf,GAA0B;MACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;MACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MAEAL,WAAW,CAACI,IAAI,CAACA,IAAL,CAAUE,KAAX,CAAX;IACF;;IAEDC,KAAK;EAEP,CAVQ,EAUN,EAVM,CAAT;;EAYA,SAASC,YAAT,GAAwB;IACrB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,QAAQ,CAACc,MAApC,CAArB;IACA,MAAMC,SAAS,GAAGf,QAAQ,CAACU,YAAD,CAAR,CAAuBM,GAAzC;IAEApB,OAAO,CAACqB,QAAQ,KAAK,EAClB,GAAGA,QADe;MAElBlB,KAAK,EAAEgB;IAFW,CAAL,CAAT,CAAP;EAIF;;EAED,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;IAC1B,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAgBF,KAAK,CAACG,MAA5B;IAEA1B,OAAO,CAACqB,QAAQ,KAAK,EAClB,GAAGA,QADe;MAElB,CAACG,IAAD,GAAQC;IAFU,CAAL,CAAT,CAAP;EAIF;;EAED,oBACG;IAAA,wBACG;MAAK,SAAS,EAAC,MAAf;MAAA,wBACG;QAAO,SAAS,EAAC,YAAjB;QAA8B,IAAI,EAAC,MAAnC;QAA0C,WAAW,EAAC,KAAtD;QAA4D,IAAI,EAAC,SAAjE;QAA2E,KAAK,EAAE1B,IAAI,CAACE,OAAvF;QAAgG,QAAQ,EAAEqB;MAA1G;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAO,SAAS,EAAC,YAAjB;QAA8B,IAAI,EAAC,MAAnC;QAA0C,WAAW,EAAC,QAAtD;QAA+D,IAAI,EAAC,YAApE;QAAiF,KAAK,EAAEvB,IAAI,CAACG,UAA7F;QAAyG,QAAQ,EAAEoB;MAAnH;QAAA;QAAA;QAAA;MAAA,QAFH,eAGG;QAAQ,OAAO,EAAET,YAAjB;QAA+B,SAAS,EAAC,aAAzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAMG;MAAK,SAAS,EAAC,MAAf;MAAA,wBACG;QAAK,SAAS,EAAC,YAAf;QAA4B,GAAG,EAAEd,IAAI,CAACI;MAAtC;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAI,SAAS,EAAC,eAAd;QAAA,UAA+BJ,IAAI,CAACE;MAApC;QAAA;QAAA;QAAA;MAAA,QAFH,eAGG;QAAI,SAAS,EAAC,kBAAd;QAAA,UAAkCF,IAAI,CAACG;MAAvC;QAAA;QAAA;QAAA;MAAA,QAHH;IAAA;MAAA;MAAA;MAAA;IAAA,QANH;EAAA;IAAA;IAAA;IAAA;EAAA,QADH;AAcF;;GArDuBJ,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}